--Exercise1
SELECT DISTINCT replacement_cost
FROM film
ORDER BY replacement_cost;

SELECT MIN(replacement_cost) AS min_replacement_cost
FROM film;
--Exercise2
SELECT 
    CASE 
        WHEN replacement_cost BETWEEN 9.99 AND 19.99 THEN 'low'
        WHEN replacement_cost BETWEEN 20.00 AND 24.99 THEN 'medium'
        WHEN replacement_cost BETWEEN 25.00 AND 29.99 THEN 'high'
    END AS cost_range,
    COUNT(*) AS film_count
FROM film
GROUP BY cost_range
ORDER BY cost_range;

SELECT COUNT(*) AS low_count
FROM film
WHERE replacement_cost BETWEEN 9.99 AND 19.99;
--Exercise3
SELECT a.title, a.length, c.name FROM film AS a
JOIN film_category AS b
ON a.film_id = b.film_id
JOIN category AS c
ON c.category_id = b.category_id
WHERE c.name = 'Dramma' OR c.name = 'Sports'
ORDER BY a.length DESC;

SELECT MAX(length), name FROM (SELECT a.title, a.length, c.name FROM film AS a
JOIN film_category AS b
ON a.film_id = b.film_id
JOIN category AS c
ON c.category_id = b.category_id
WHERE c.name = 'Dramma' OR c.name = 'Sports'
ORDER BY a.length DESC)
GROUP BY name
--Exercise4
SELECT COUNT(a.film_id) AS title, c.name  FROM film AS a
JOIN film_category AS b
ON a.film_id =b.film_id
JOIN category AS c
ON c.category_id = b.category_id
GROUP BY c.name;

SELECT COUNT(a.film_id) AS title, c.name  FROM film AS a
JOIN film_category AS b
ON a.film_id =b.film_id
JOIN category AS c
ON c.category_id = b.category_id
GROUP BY c.name
ORDER BY title DESC
LIMIT 1
--Exercise5
SELECT a.first_name || a.last_name AS name, COUNT(b.film_id) FROM actor AS a
JOIN film_actor AS b
ON a.actor_id = b.actor_id
GROUP BY a.first_name || a.last_name, a.actor_id;

SELECT a.first_name || a.last_name AS name, COUNT(b.film_id) FROM actor AS a
JOIN film_actor AS b
ON a.actor_id = b.actor_id
GROUP BY a.first_name || a.last_name, a.actor_id 
ORDER BY  COUNT(b.film_id) DESC
LIMIT 1
--Exercise6
SELECT COUNT(*) AS unused_address_count FROM address a
LEFT JOIN customer c 
ON a.address_id = c.address_id
WHERE c.address_id IS NULL
--Exercise7
SELECT a.city, SUM(d.amount) AS revenue
FROM city AS a
JOIN address AS b ON a.city_id = b.city_id
JOIN customer AS c ON b.address_id = c.address_id
JOIN payment AS d ON c.customer_id = d.customer_id
GROUP BY a.city
ORDER BY revenue DESC
LIMIT 1;
--Exercise8
SELECT CONCAT(ci.city, ', ', co.country) AS city_country, SUM(p.amount) AS revenue
FROM city ci
JOIN country co ON ci.country_id = co.country_id
JOIN address a ON ci.city_id = a.city_id
JOIN customer c ON a.address_id = c.address_id
JOIN payment p ON c.customer_id = p.customer_id
GROUP BY ci.city, co.country
ORDER BY revenue ASC
LIMIT 1



